# Generated by Django 2.1 on 2018-08-29 13:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'component_tab',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('upd_date', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('os_version', models.CharField(max_length=10)),
                ('device_platform', models.IntegerField(choices=[(0, 'Android'), (1, 'iOS'), (2, 'Others')], default=0)),
                ('device_status', models.IntegerField(choices=[(0, 'Available'), (1, 'Occupied'), (2, 'Broken'), (3, 'Returned')], default=0)),
            ],
            options={
                'db_table': 'device_tab',
            },
        ),
        migrations.CreateModel(
            name='HistoricalDevice',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(blank=True, editable=False, verbose_name='date created')),
                ('upd_date', models.DateTimeField(blank=True, editable=False, verbose_name='date updated')),
                ('os_version', models.CharField(max_length=10)),
                ('device_platform', models.IntegerField(choices=[(0, 'Android'), (1, 'iOS'), (2, 'Others')], default=0)),
                ('device_status', models.IntegerField(choices=[(0, 'Available'), (1, 'Occupied'), (2, 'Broken'), (3, 'Returned')], default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical device',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalRelease',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('release_platform', models.IntegerField(choices=[(0, 'Generic'), (1, 'Android'), (2, 'iOS'), (3, 'Web'), (4, 'Others')], default=0)),
                ('release_note', models.CharField(max_length=200)),
                ('release_status', models.IntegerField(choices=[(0, 'Created'), (1, 'Active'), (2, 'Released'), (3, 'Discarded')], default=0)),
                ('created_date', models.DateTimeField(blank=True, editable=False, verbose_name='date created')),
                ('upd_date', models.DateTimeField(blank=True, editable=False, verbose_name='date updated')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical release',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTestPlan',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(blank=True, editable=False, verbose_name='date created')),
                ('upd_date', models.DateTimeField(blank=True, editable=False, verbose_name='date updated')),
                ('test_plan_status', models.IntegerField(choices=[(0, 'Created'), (1, 'Active'), (2, 'Completed'), (3, 'Discarded')], default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical test plan',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTestRun',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(blank=True, editable=False, verbose_name='date created')),
                ('upd_date', models.DateTimeField(blank=True, editable=False, verbose_name='date updated')),
                ('test_run_status', models.IntegerField(choices=[(0, 'Created'), (1, 'Active'), (2, 'Blocked'), (3, 'Completed'), (4, 'Discarded')], default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical test run',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('detail', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('upd_date', models.DateTimeField(auto_now=True, verbose_name='date updated')),
            ],
            options={
                'db_table': 'message_tab',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('upd_date', models.DateTimeField(auto_now=True, verbose_name='date updated')),
            ],
            options={
                'db_table': 'project_tab',
            },
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('release_platform', models.IntegerField(choices=[(0, 'Generic'), (1, 'Android'), (2, 'iOS'), (3, 'Web'), (4, 'Others')], default=0)),
                ('release_note', models.CharField(max_length=200)),
                ('release_status', models.IntegerField(choices=[(0, 'Created'), (1, 'Active'), (2, 'Released'), (3, 'Discarded')], default=0)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('upd_date', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='console.Project')),
            ],
            options={
                'db_table': 'release_tab',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('upd_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'role_tab',
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=200)),
                ('test_case_type', models.IntegerField(choices=[(0, 'Functional'), (1, 'Acceptance'), (2, 'Accessibility'), (3, 'Automated'), (4, 'Compatibility'), (5, 'Performance'), (6, 'Regression'), (7, 'Security'), (8, 'Sanity'), (9, 'Usability'), (10, 'Localization')])),
                ('estimate_in_minute', models.DecimalField(decimal_places=2, max_digits=5)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('upd_date', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('test_case_tier', models.IntegerField(choices=[(0, 'tier 0'), (1, 'tier 1'), (2, 'tier 2'), (3, 'tier 3'), (4, 'tier 4')], default=1)),
                ('test_case_platform', models.IntegerField(choices=[(0, 'Generic'), (1, 'Android'), (2, 'iOS'), (3, 'Web'), (4, 'Others')])),
                ('preconditions', models.CharField(max_length=200)),
                ('test_steps', models.CharField(max_length=2000)),
                ('expected_result', models.CharField(max_length=500)),
                ('component', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='console.Component')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='console.Project')),
            ],
            options={
                'db_table': 'test_case_tab',
            },
        ),
        migrations.CreateModel(
            name='TestPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('upd_date', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('test_plan_status', models.IntegerField(choices=[(0, 'Created'), (1, 'Active'), (2, 'Completed'), (3, 'Discarded')], default=0)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='console.Project')),
            ],
            options={
                'db_table': 'test_plan_tab',
            },
        ),
        migrations.CreateModel(
            name='TestRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('upd_date', models.DateTimeField(auto_now=True, verbose_name='date updated')),
                ('test_run_status', models.IntegerField(choices=[(0, 'Created'), (1, 'Active'), (2, 'Blocked'), (3, 'Completed'), (4, 'Discarded')], default=0)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='console.Project')),
                ('test_plan', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='console.TestPlan')),
            ],
            options={
                'db_table': 'test_run_tab',
            },
        ),
        migrations.CreateModel(
            name='TestRunCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=500)),
                ('actual_result', models.CharField(blank=True, default=None, max_length=500, null=True)),
                ('test_run_case_status', models.IntegerField(choices=[(0, 'Succeed'), (1, 'Failed'), (2, 'Error'), (3, 'Skipped'), (4, '-')], default=4)),
                ('test_case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.TestCase')),
                ('test_run', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.TestRun')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('upd_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'user_tab',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.Role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.User')),
            ],
            options={
                'db_table': 'user_role_tab',
            },
        ),
        migrations.AddField(
            model_name='testrun',
            name='user',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='console.User'),
        ),
        migrations.AddField(
            model_name='historicaltestrun',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltestrun',
            name='project',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='console.Project'),
        ),
        migrations.AddField(
            model_name='historicaltestrun',
            name='test_plan',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='console.TestPlan'),
        ),
        migrations.AddField(
            model_name='historicaltestrun',
            name='user',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='console.User'),
        ),
        migrations.AddField(
            model_name='historicaltestplan',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaltestplan',
            name='project',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='console.Project'),
        ),
        migrations.AddField(
            model_name='historicalrelease',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalrelease',
            name='project',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='console.Project'),
        ),
        migrations.AddField(
            model_name='historicaldevice',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicaldevice',
            name='user',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='console.User'),
        ),
        migrations.AddField(
            model_name='device',
            name='user',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='console.User'),
        ),
        migrations.AddField(
            model_name='component',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.Project'),
        ),
    ]
